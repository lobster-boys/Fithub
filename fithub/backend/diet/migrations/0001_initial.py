# Generated by Django 5.2.1 on 2025-06-10 07:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ecommerce', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('calories', models.DecimalField(decimal_places=2, help_text='칼로리(Kcal)', max_digits=7)),
                ('protein', models.DecimalField(decimal_places=2, help_text='단백질(g)', max_digits=7)),
                ('carbs', models.DecimalField(decimal_places=2, help_text='탄수화물(g)', max_digits=7)),
                ('fat', models.DecimalField(decimal_places=2, help_text='지방(g)', max_digits=7)),
                ('serving_size', models.CharField(help_text='1인분 기준량(예: "100g": "1컵")', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='foods', to='ecommerce.category')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='food_info', to='ecommerce.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_foods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '식품',
                'db_table': 'diet_food',
                'indexes': [models.Index(fields=['name'], name='idx_food_name')],
                'constraints': [models.CheckConstraint(condition=models.Q(('user__isnull', False), ('product__isnull', False), _connector='OR'), name='ck_food_user_or_product_not_null')],
            },
        ),
    ]
